{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["react-refresh", "filename-rules"],
  "overrides": [
    {
      "files": "*.json",
      "parser": "jsonc-eslint-parser",
      "rules": {}
    },
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx", "*.mjs"],
      "rules": {
        "import/no-useless-path-segments": [
          "error",
          {
            "noUselessIndex": true
          }
        ],
        "import/order": [
          "error",
          {
            "pathGroups": [
              {
                "pattern": "*.{scss,css}",
                "patternOptions": {
                  "matchBase": true
                },
                "group": "unknown",
                "position": "after"
              },
              {
                "pattern": "@/**",
                "group": "external",
                "position": "after"
              }
            ],
            "alphabetize": {
              "order": "asc",
              "caseInsensitive": true
            }
          }
        ],
        // kebab-case allowing numbers. e.g. view-3d
        "filename-rules/match": ["error", "/^([a-z0-9]+-)*[a-z0-9]+(?:\\..*)?$/"]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:react-hooks/recommended", "plugin:import/recommended"],
      "rules": {
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "{}": false
            },
            "extendDefaults": true
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["PascalCase", "camelCase"],
            "filter": {
              "regex": "DOM$",
              "match": false
            },
            "leadingUnderscore": "allow"
          },
          {
            "selector": ["variable", "function"],
            "format": ["PascalCase", "camelCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": ["variable"],
            "format": ["UPPER_CASE", "PascalCase", "camelCase"],
            "modifiers": ["const", "global"]
          },
          {
            "selector": "parameter",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "property",
            "format": null,
            "leadingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["destructured"],
            "format": null
          },
          {
            "selector": "parameter",
            "filter": {
              "regex": "^UNSAFE_",
              "match": true
            },
            "format": null
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "vars": "all",
            "args": "all",
            "caughtErrors": "all",
            "ignoreRestSiblings": false,
            "argsIgnorePattern": "^_"
          }
        ],
        "arrow-parens": ["error", "always"]
      }
    },
    {
      "files": ["*.js", "*.jsx", "*.mjs"],
      "extends": ["plugin:react-hooks/recommended"],
      "rules": {
        "arrow-parens": ["error", "always"]
      }
    },
    {
      "files": [
        "*.spec.ts",
        "*.spec.tsx",
        "*.spec.js",
        "*.spec.jsx",
        "*.test.ts",
        "*.test.tsx",
        "*.test.js",
        "*.test.jsx"
      ],
      "plugins": ["jest"],
      "extends": ["plugin:testing-library/react", "plugin:jest/recommended", "plugin:jest-dom/recommended"],
      "rules": {
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "testing-library/no-node-access": ["error", { "allowContainerFirstChild": true }],
        "jest/consistent-test-it": ["error", { "fn": "it" }]
      }
    },
    {
      "files": ["*.jsx", "*.tsx"],
      "rules": {
        "import/no-default-export": "error",
        "react-refresh/only-export-components": [
          "warn",
          {
            "allowConstantExport": true,
            "allowExportNames": ["meta", "links", "headers", "loader", "action"]
          }
        ],
        "react/no-array-index-key": "error"
      }
    },
    {
      "files": ["*.stories.jsx", "*.stories.tsx"],
      "rules": {
        "import/no-default-export": "off"
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["tsconfig.base.json", "**/tsconfig.json"]
      }
    }
  }
}
